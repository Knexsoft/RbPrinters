// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RbPrinters.Api.DAL;

namespace RbPrinters.Api.DAL.Migrations
{
    [DbContext(typeof(RbPrintersDbContext))]
    [Migration("20180715174401_1.1")]
    partial class _11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.Branch", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("MobileAlt")
                        .HasMaxLength(10);

                    b.Property<string>("Phone")
                        .HasMaxLength(11);

                    b.HasKey("ID");

                    b.HasIndex("BranchName")
                        .IsUnique();

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Comment")
                        .HasMaxLength(300);

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("EmailID")
                        .HasMaxLength(100);

                    b.Property<string>("Home")
                        .HasMaxLength(10);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasMaxLength(11);

                    b.Property<string>("Pincode")
                        .HasMaxLength(6);

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.Order", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment")
                        .HasMaxLength(300);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<Guid>("CustomerID");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(7);

                    b.Property<Guid>("OrderStatusID");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.HasIndex("OrderStatusID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.OrderStatus", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Comment")
                        .HasMaxLength(300);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("Color")
                        .IsUnique();

                    b.HasIndex("Status")
                        .IsUnique();

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.Permission", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BranchID");

                    b.Property<string>("Comments")
                        .HasMaxLength(300);

                    b.Property<Guid>("UserID");

                    b.Property<Guid>("UserRoleID");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.HasIndex("UserID");

                    b.HasIndex("UserRoleID");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.Supplier", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountName")
                        .HasMaxLength(100);

                    b.Property<string>("AccountNumber");

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<string>("Comment")
                        .HasMaxLength(300);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("EmailID")
                        .HasMaxLength(20);

                    b.Property<string>("Home")
                        .HasMaxLength(10);

                    b.Property<string>("IFSCNumber")
                        .HasMaxLength(15);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasMaxLength(11);

                    b.Property<string>("Pincode")
                        .HasMaxLength(6);

                    b.HasKey("ID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateOn");

                    b.Property<string>("EmailID")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("MoblieAlt")
                        .HasMaxLength(10);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.HasIndex("EmailID")
                        .IsUnique()
                        .HasFilter("[EmailID] IS NOT NULL");

                    b.HasIndex("Mobile")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.UserRole", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment")
                        .HasMaxLength(300);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("Role")
                        .IsUnique();

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.WeddingCard", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("Comment");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("ModifiedBy");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<decimal>("Rate");

                    b.Property<Guid>("SupplierID");

                    b.Property<int>("TotalCards");

                    b.HasKey("ID");

                    b.HasIndex("CardNumber")
                        .IsUnique();

                    b.HasIndex("SupplierID");

                    b.ToTable("WeddingCards");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.WeddingCardOrder", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment")
                        .HasMaxLength(300);

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("OrderID");

                    b.Property<Guid>("OrderStatusID");

                    b.Property<decimal>("Rate");

                    b.Property<decimal>("TotalAmount");

                    b.Property<int>("TotalCards");

                    b.Property<int>("TotalColor");

                    b.Property<int>("TotalPrint");

                    b.Property<Guid>("WeddingCardID");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("OrderStatusID");

                    b.HasIndex("WeddingCardID");

                    b.ToTable("WeddingCardOrders");
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.Order", b =>
                {
                    b.HasOne("RbPrinters.Api.Contracts.Models.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RbPrinters.Api.Contracts.Models.Entity.OrderStatus", "OrderStatus")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatusID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.Permission", b =>
                {
                    b.HasOne("RbPrinters.Api.Contracts.Models.Entity.Branch", "Branch")
                        .WithMany("Permissions")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RbPrinters.Api.Contracts.Models.Entity.User", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RbPrinters.Api.Contracts.Models.Entity.UserRole", "UserRole")
                        .WithMany("Permissions")
                        .HasForeignKey("UserRoleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.WeddingCard", b =>
                {
                    b.HasOne("RbPrinters.Api.Contracts.Models.Entity.Supplier", "Supplier")
                        .WithMany("WeddingCards")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RbPrinters.Api.Contracts.Models.Entity.WeddingCardOrder", b =>
                {
                    b.HasOne("RbPrinters.Api.Contracts.Models.Entity.Order", "Order")
                        .WithMany("WeddingCardOrders")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RbPrinters.Api.Contracts.Models.Entity.OrderStatus", "OrderStatus")
                        .WithMany("WeddingCardOrders")
                        .HasForeignKey("OrderStatusID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RbPrinters.Api.Contracts.Models.Entity.WeddingCard", "WeddingCard")
                        .WithMany("WeddingCardOrders")
                        .HasForeignKey("WeddingCardID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
